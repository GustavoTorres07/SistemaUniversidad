@model IPagedList<SistemaUniversidad.Models.ESTUDIANTE>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutBarraMenu.cshtml";
    bool isSearching = !string.IsNullOrEmpty(Request.QueryString["search"]);
    bool hasSearchResults = !isSearching || Model.Any(); // Mostrar resultados si no se está buscando o hay resultados
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="~/Content/tabla.css">
    <link rel="stylesheet" href="~/Content/BarraMenu.css">
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-qbp+GuLYVw8kKAtK2P7mCYX81fYj2cr29md+juVkE44Ycu15g8If2go4uS8Hg9dL/9v2U/fvf0WaO+9jqMRyVg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>Tabla de Estudiantes</title>
</head>

<div class="container mt-5">
    <h2 class="text-center mb-4"><u>Lista de Estudiantes</u></h2>

    <!-- Formulario de búsqueda -->
    @using (Html.BeginForm("Index", "Estudiante", FormMethod.Get))
    {
        <div class="mb-3">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="input-group">
                        <input type="text" name="search" class="form-control" placeholder="Buscar por DNI o Legajo" value="@Request.QueryString["search"]" />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-primary">Buscar</button>
                        </div>
                    </div>
                    <div class="mt-2">
                        <div class="form-check form-check-inline">
                            <input type="radio" id="buscarDNI" name="toggle" value="true" class="form-check-input" @(Request.QueryString["toggle"] == "true" ? "checked" : "") />
                            <label for="buscarDNI" class="form-check-label">Buscar por DNI</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input type="radio" id="buscarLegajo" name="toggle" value="false" class="form-check-input" @(Request.QueryString["toggle"] == "false" ? "checked" : "") />
                            <label for="buscarLegajo" class="form-check-label">Buscar por Legajo</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="mb-3">
        <a href="@Url.Action("AgregarEstudiante", "Estudiante")" class="btn btn-success">Crear Nuevo Estudiante</a>
    </div>

    <!-- Mostrar mensaje si no hay resultados después de la búsqueda -->
    @if (isSearching && !hasSearchResults)
    {
        <div class="alert alert-warning mt-4">
            No se encontraron resultados para la búsqueda.
        </div>
    }

    <!-- Mostrar tabla de estudiantes -->
    <div class="table-responsive mt-4">
        <table class="table table-bordered">
            <thead class="bg-dark text-white">
                <tr>
                    <th class="text-center">Numero de Legajo</th>
                    <th class="text-center">Nombre</th>
                    <th class="text-center">Apellido</th>
                    <th class="text-center">DNI</th>
                    <th class="text-center">Estado</th>
                    <th class="text-center">Correo Electrónico</th>
                    <th class="text-center">Carrera</th>
                    <th class="text-center">Telefono</th>
                    <th class="text-center">Fecha Registro</th>
                    <th class="text-center">Activo?</th>
                    <th class="text-center">Funciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.numeroLegajo)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.nombreEstudiante)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.apellidoEstudiante)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.dniEstudiante)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.ESTADOESTUDIANTE.nombreEstadoEstudiante)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.correoElectronico)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.CARRERA.nombreCarrera)</td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.telefono)</td>
                        <td class="text-center">@item.fechaRegistroEstudiante.ToString("dd-MM-yyyy")</td>
                        <td class="text-center">
                            @if (item.activo.HasValue)
                            {
                                if (item.activo.Value)
                                {
                                    <span class="badge bg-success">Disponible</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">No Disponible</span>
                                }
                            }
                            else
                            {
                                <span class="text-warning">Desconocido</span>
                            }
                        </td>

                        <td class="text-center">
                            <button type="button" class="btn btn-primary mr-2" onclick="location.href='@Url.Action("EditarEstudiante", "Estudiante", new { idEstudiante = item.idEstudiante })'">
                                Editar
                            </button>
                            <button type="button" class="btn btn-info mr-2" onclick="location.href='@Url.Action("DetalleEstudiante", "Estudiante", new { idEstudiante = item.idEstudiante })'">
                                Mas Info
                            </button>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#eliminarEstudianteModal" data-estudianteid="@item.idEstudiante" data-estudiantenumerolegajo="@item.numeroLegajo">
                                Eliminar
                            </button>
                            <a href="@Url.Action("VerInscripciones", "InscripcionEstudianteMateria", new { idEstudiante = item.idEstudiante })" class="btn btn-info">Ver Inscripciones-Materias</a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Paginación -->
<div class="d-flex justify-content-center mt-4">
    <ul class="pagination">
        @if (Model.PageCount > 1)
        {
            if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, search = Request.QueryString["search"], toggle = Request.QueryString["toggle"] })" aria-label="Anterior">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Anterior</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">&laquo;</span>
                </li>
            }

            @* Utiliza la directiva @ para empezar el bloque de Razor *@
            for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, search = Request.QueryString["search"], toggle = Request.QueryString["toggle"] })">@i</a>
                </li>
            }

            if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, search = Request.QueryString["search"], toggle = Request.QueryString["toggle"] })" aria-label="Siguiente">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Siguiente</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">&raquo;</span>
                </li>
            }
        }
    </ul>
</div>

<!-- Modal para eliminar estudiante -->
<div class="modal fade" id="eliminarEstudianteModal" tabindex="-1" aria-labelledby="eliminarEstudianteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eliminarEstudianteModalLabel">Eliminar Estudiante</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro de que desea eliminar al estudiante con el número de legajo <strong id="estudianteLegajo"></strong> ?
            </div>
            <div class="modal-footer">
                <form id="formEliminarEstudiante" method="post">
                    <input type="hidden" id="estudianteId" name="idEstudiante" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Script para manejar la asignación del ID del estudiante al modal
    var eliminarEstudianteModal = document.getElementById('eliminarEstudianteModal');
    eliminarEstudianteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var estudianteId = button.getAttribute('data-estudianteid');
        var estudianteNumeroLegajo = button.getAttribute('data-estudiantenumerolegajo');

        var modalTitle = eliminarEstudianteModal.querySelector('.modal-body #estudianteLegajo');
        var form = eliminarEstudianteModal.querySelector('#formEliminarEstudiante');
        form.action = '@Url.Action("EliminarEstudiante", "Estudiante")';

        modalTitle.textContent = estudianteNumeroLegajo;
        var hiddenField = eliminarEstudianteModal.querySelector('#estudianteId');
        hiddenField.value = estudianteId;
    });
</script>
